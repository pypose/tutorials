
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "pgo/pgo_dataset.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_pgo_pgo_dataset.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_pgo_pgo_dataset.py:


Pose Graph Optimization Dataset Tutorial
========================================

.. GENERATED FROM PYTHON SOURCE LINES 6-55

.. code-block:: default


    import os,torch
    import numpy as np
    import pypose as pp
    import torch.utils.data as Data


    class G2OPGO(Data.Dataset):
        def __init__(self, root, dataname, device='cpu'):
            super().__init__()

            def info2mat(info):
                mat = np.zeros((6,6))
                ix = 0
                for i in range(mat.shape[0]):
                    mat[i,i:] = info[ix:ix+(6-i)]
                    mat[i:,i] = info[ix:ix+(6-i)]
                    ix += (6-i)
                return mat
            self.dtype = torch.get_default_dtype()
            filename = os.path.join(root, dataname)
            ids, nodes, edges, poses, infos = [], [], [], [], []
            with open(filename) as f:
                for line in f:
                    line = line.split()
                    if line[0] == 'VERTEX_SE3:QUAT':
                        ids.append(torch.tensor(int(line[1]), dtype=torch.int64))
                        nodes.append(pp.SE3(np.array(line[2:], dtype=np.float64)))
                    elif line[0] == 'EDGE_SE3:QUAT':
                        edges.append(torch.tensor(np.array(line[1:3], dtype=np.int64)))
                        poses.append(pp.SE3(np.array(line[3:10], dtype=np.float64)))
                        infos.append(torch.tensor(info2mat(np.array(line[10:], dtype=np.float64))))

            self.ids = torch.stack(ids)
            self.nodes = torch.stack(nodes).to(self.dtype).to(device)
            self.edges = torch.stack(edges).to(device) # have to be LongTensor
            self.poses = torch.stack(poses).to(self.dtype).to(device)
            self.infos = torch.stack(infos).to(self.dtype).to(device)
            assert self.ids.size(0) == self.nodes.size(0) \
                   and self.edges.size(0) == self.poses.size(0) == self.infos.size(0)

        def init_value(self):
            return self.nodes.clone()

        def __getitem__(self, i):
            return self.edges[i], self.poses[i], self.infos[i]

        def __len__(self):
            return self.edges.size(0)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_pgo_pgo_dataset.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: pgo_dataset.py <pgo_dataset.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: pgo_dataset.ipynb <pgo_dataset.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
